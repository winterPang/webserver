{"version":3,"sources":["frame/component/echarts/service/oasis-echarts-util.js"],"names":["isPieChart","type","indexOf","isMapChart","isAxisChart","isHeatmapChart","getAxisTicks","data","config","ticks","angular","forEach","datapoints","datapoint","push","x","boundaryGap","_DefaultSeries","itemStyle","silent","animation","animationThreshold","animationDuration","animationEasing","animationDelay","animationDurationUpdate","animationEasingUpdate","animationDelayUpdate","tooltip","getSeries","series","serie","conf","name","copySerie","extend","_config","_common","coordinateSystem","lengendHoverLink","xAxisIndex","yAxisIndex","polarIndex","stack","label","zlevel","z","_AxisConf","sysbol","sysbolSize","symbolOffset","showSymbol","showAllSymbol","hoverAnimation","connectNulls","clipOverflow","step","areaStyle","smooth","_BarConf","normal","y","value","_PieDefaultConf","legendHoverLink","selectedMode","selectedOffset","clockwise","startAngle","minAngle","roseType","avoidLabelOverlap","stillShowZeroSum","labelLine","center","radius","show","position","formatter","item","percent","toFixed","emphasis","_GaugeConf","endAngle","min","max","splitNumber","axisLine","lineStyle","color","width","axisTick","length","axisLabel","textStyle","splitLine","pointer","title","offsetCenter","fontWeight","detail","_DefaultMap","roam","map","aspectScale","boundingCoords","zoom","scaleLimit","nameMap","_DefaultRadar","symbol","symbolSize","_DefaultHeatMap","geoIndex","calendarIndex","blurSize","minOpacity","maxOpacity","markPoint","markLine","markArea","dataZoom","getLegend","legend","_DefaultLegend","orient","top","itemWidth","itemHeight","icon","getTooltip","trigger","isObject","getTitle","text","subtext","subtitle","formatKMBT","v","Math","round","abs","factory"],"mappings":"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","file":"frame/component/echarts/service/oasis-echarts-util.js","sourcesContent":["import angularAMD from 'angularAMD';\r\n\r\nlet isPieChart = (type) => {\r\n    return ['pie', 'donut'].indexOf(type) > -1;\r\n}\r\n\r\nlet isMapChart = (type) => {\r\n    return ['map'].indexOf(type) > -1;\r\n}\r\n\r\nlet isAxisChart = (type) => {\r\n    return ['line', 'bar', 'area'].indexOf(type) > -1;\r\n}\r\n\r\nlet isHeatmapChart = (type) => {\r\n    return ['heatmap'].indexOf(type) > -1;\r\n}\r\n\r\nlet getAxisTicks = (data, config, type) => {\r\n    var ticks = [];\r\n    if (data[0]) {\r\n        angular.forEach(data[0].datapoints, function(datapoint) {\r\n            ticks.push(datapoint.x);\r\n        });\r\n    }\r\n\r\n    return {\r\n        type: 'category',\r\n        boundaryGap: type === 'bar',\r\n        data: ticks,\r\n    };\r\n}\r\n\r\nlet _DefaultSeries = {\r\n    // type: 'line',\r\n    // name: '',\r\n    itemStyle: {},\r\n    //markPoint:{},\r\n    //markLine:{},\r\n    //markArea:{},\r\n    silent: false,\r\n    animation: true,\r\n    animationThreshold: 2000,\r\n    animationDuration: 1000,\r\n    animationEasing: \"linear\",\r\n    animationDelay: 0,\r\n    animationDurationUpdate: 300,\r\n    animationEasingUpdate: 'cubicOut ',\r\n    animationDelayUpdate: 0,\r\n    tooltip: {}\r\n}\r\n\r\nlet getSeries = (data, config, type) => {\r\n    var series = [];\r\n    angular.forEach(data, function(serie) {\r\n        // datapoints for line, area, bar chart\r\n        //var datapoints = [];      \r\n        var conf = {\r\n            type: type || 'line',\r\n            name: serie.name\r\n                //data: [],\r\n        };\r\n        let copySerie = angular.extend({}, serie);\r\n        delete copySerie.data;\r\n        let _config = copySerie;\r\n\r\n        conf = angular.extend({}, _DefaultSeries, conf);\r\n        conf.data = (serie.data && !serie.datapoints) ? serie.data : [];\r\n        if (isAxisChart(type)) {\r\n            let _common = {\r\n                coordinateSystem: \"cartesian2d\",\r\n                lengendHoverLink: true,\r\n                xAxisIndex: 0,\r\n                yAxisIndex: 0,\r\n                polarIndex: 0,\r\n                stack: null,\r\n                label: {},\r\n                zlevel: 0,\r\n                z: 2,\r\n                //dimensions:[],\r\n                //encode:{},\r\n            };\r\n            let _AxisConf = {\r\n                sysbol: 'emptyCircle',\r\n                sysbolSize: 4,\r\n                //symbolRotate:0,\r\n                symbolOffset: [0, 0],\r\n                showSymbol: true,\r\n                showAllSymbol: false,\r\n                hoverAnimation: true,\r\n                connectNulls: false,\r\n                clipOverflow: true,\r\n                step: false,\r\n                areaStyle: {},\r\n                smooth: false,\r\n                // soothMonotone:\"\",\r\n                // sampling:\"\"          \r\n            }\r\n\r\n            let _BarConf = {\r\n                //legendHoverLink:true,      \r\n                // barWidth:\"\",\r\n                // barMaxWidth:\"\",\r\n                // baiMinHeight:0,\r\n                // barGap:\"30%\",\r\n                // barCategoryGap:\"20%\"\r\n            }\r\n\r\n            if (type === 'area') {\r\n                conf.type = 'line';\r\n                conf.itemStyle = {\r\n                    normal: {\r\n                        areaStyle: {\r\n                            type: 'default'\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            //dispose  serie.config\r\n            conf = angular.extend(conf, _common);\r\n            if (type === 'bar') {\r\n                conf = angular.extend(conf, _BarConf, _config || {});\r\n            } else {\r\n                conf = angular.extend(conf, _AxisConf, _config || {});\r\n            }\r\n            //dispose serie.data  \r\n            angular.forEach(serie.datapoints, function(datapoint) {\r\n                conf.data.push(datapoint.y);\r\n            });\r\n        } else {\r\n            angular.forEach(serie.datapoints, function(datapoint) {\r\n                conf.data.push({ value: datapoint.y, name: datapoint.x });\r\n            });\r\n        }\r\n        if (isPieChart(type)) {\r\n            // donut charts are actually pie charts\r\n            conf.type = 'pie';\r\n            let _PieDefaultConf = {\r\n                legendHoverLink: true,\r\n                hoverAnimation: true,\r\n                selectedMode: false,\r\n                selectedOffset: 10,\r\n                clockwise: true,\r\n                startAngle: 90,\r\n                minAngle: 3,\r\n                roseType: false,\r\n                avoidLabelOverlap: true,\r\n                stillShowZeroSum: true,\r\n                label: {},\r\n                labelLine: {},\r\n                center: [],\r\n                radius: [],\r\n            }\r\n            conf = angular.extend(conf, _PieDefaultConf, _config || {});\r\n            // pie chart need special radius, center config\r\n            conf.center = config.center || ['50%', '40%'];\r\n            conf.radius = config.radius || '60%';\r\n            // donut chart require special itemStyle\r\n            if (type === 'donut') {\r\n                conf.label = {\r\n                    normal: {\r\n                        show: false,\r\n                        position: 'outside',\r\n                        formatter: '{b}'\r\n                    }\r\n                }\r\n                // conf.itemStyle = {\r\n                //     normal: {\r\n                //         label: {\r\n                //             show: false\r\n                //         },\r\n                //         labelLine: {\r\n                //             show: false\r\n                //         }\r\n                //     },\r\n                //     emphasis: {\r\n                //         label: {\r\n                //             show: true,\r\n                //             position: 'center',\r\n                //             textStyle: {\r\n                //                 fontSize: '50',\r\n                //                 fontWeight: 'bold'\r\n                //             }\r\n                //         }\r\n                //     }\r\n                // }\r\n                conf.radius = config.radius || ['45%', '75%'];\r\n            } else if (type === 'pie') {\r\n                conf.itemStyle = {\r\n                    normal: {\r\n                        label: {\r\n                            position: 'inner',\r\n                            formatter: function(item) {\r\n                                return (+item.percent).toFixed() + '%';\r\n                            }\r\n                        },\r\n                        labelLine: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        label: {\r\n                            show: true,\r\n                            formatter: '{b}\\n{d}%'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // gauge chart need many special config\r\n        if (type === 'gauge') {\r\n            let _GaugeConf = {\r\n                radius: '75%',\r\n                startAngle: 225,\r\n                endAngle: -45,\r\n                clockwise: true,\r\n                min: 0,\r\n                max: 100,\r\n                splitNumber: 10,\r\n                axisLine: { // 坐标轴线\r\n                    lineStyle: { // 属性lineStyle控制线条样式\r\n                        color: [\r\n                            [0.2, '#228b22'],\r\n                            [0.8, '#48b'],\r\n                            [1, '#ff4500']\r\n                        ],\r\n                        width: 8\r\n                    }\r\n                },\r\n                axisTick: { // 坐标轴小标记\r\n                    splitNumber: 10, // 每份split细分多少段\r\n                    length: 12, // 属性length控制线长\r\n                    lineStyle: { // 属性lineStyle控制线条样式\r\n                        color: 'auto'\r\n                    }\r\n                },\r\n                axisLabel: { // 坐标轴文本标签，详见axis.axisLabel\r\n                    textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                        color: 'auto'\r\n                    }\r\n                },\r\n                splitLine: { // 分隔线\r\n                    show: true, // 默认显示，属性show控制显示与否\r\n                    length: 30, // 属性length控制线长\r\n                    lineStyle: { // 属性lineStyle（详见lineStyle）控制线条样式\r\n                        color: 'auto'\r\n                    }\r\n                },\r\n                // itemStyle:{},\r\n                pointer: {\r\n                    width: 5\r\n                },\r\n                title: {\r\n                    show: true,\r\n                    offsetCenter: [0, '-40%'], // x, y，单位px\r\n                    textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                        fontWeight: 'bolder'\r\n                    }\r\n                },\r\n                detail: {\r\n                    formatter: '{value}%',\r\n                    textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                        color: 'auto',\r\n                        fontWeight: 'bolder'\r\n                    }\r\n                }\r\n                // markPoint:{},\r\n                // markLine:{},\r\n                // markArea:{}\r\n            };\r\n            conf = angular.extend(conf, _GaugeConf, _config || {});\r\n        }\r\n        if (isMapChart(type)) {\r\n            conf.type = 'map';\r\n            let _DefaultMap = {\r\n                roam: false,\r\n                map: \"\",\r\n                center: [],\r\n                aspectScale: 0.75,\r\n                boundingCoords: null,\r\n                zoom: 1,\r\n                scaleLimit: {},\r\n                nameMap: {},\r\n                selectedMode: false,\r\n                label: {},\r\n                itemStyle: {},\r\n                zlevel: 0,\r\n                z: 2,\r\n                // left:'auto',\r\n                //  top:'auto',\r\n                //  right:'auto',\r\n                //   bottom:'auto',\r\n                //  layoutCenter:null,\r\n                //layoutSize:'',\r\n                //  geoIndex:null,\r\n                // mapValueCalculation:'sum',\r\n                //showLegendSymbol:'',\r\n            }\r\n            conf = angular.extend(conf, _DefaultMap, _config || {});\r\n        }\r\n        if (type === 'radar') {\r\n            let _DefaultRadar = {\r\n                //radarIndex:\"\",\r\n                symbol: \"circle\",\r\n                symbolSize: 4,\r\n                //symbolRotate:\"\",\r\n                symbolOffset: [0, 0],\r\n                label: {},\r\n                itemStyle: {},\r\n                lineStyle: {},\r\n                areaStyle: {},\r\n            }\r\n            conf = angular.extend(conf, _DefaultRadar, _config || {});\r\n        }\r\n        if (isHeatmapChart(type)) {\r\n            conf.type = 'heatmap';\r\n            let _DefaultHeatMap = {\r\n                coordinateSystem: 'cartesian2d',\r\n                xAxisIndex: 0,\r\n                yAxisIndex: 0,\r\n                geoIndex: 0,\r\n                calendarIndex: 0,\r\n                blurSize: 20,\r\n                minOpacity: 0,\r\n                maxOpacity: 1,\r\n                markPoint: {},\r\n                markLine: {},\r\n                markArea: {},\r\n                zlevel: 0,\r\n                z: 2,\r\n                silent: false,\r\n                tooltip: {}\r\n            };\r\n            //conf.name = serie.name;\r\n            //conf.data = serie.data;\r\n            //conf = angular.extend(conf, {\r\n            //     label: {\r\n            //         normal: {\r\n            //             show: true\r\n            //         }\r\n            //     },\r\n            //     itemStyle: {\r\n            //         emphasis: {\r\n            //             shadowBlur: 10,\r\n            //             shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            //         }\r\n            //     }\r\n            // }, config.heatmap || {});\r\n            conf = angular.extend(conf, _DefaultHeatMap, _config || {});\r\n\r\n        }\r\n        series.push(conf);\r\n    });\r\n    return series;\r\n}\r\n\r\nlet dataZoom = (data, config, type) =>{\r\n    \r\n}\r\n\r\nlet getLegend = (data, config, type) => {\r\n    var legend = { data: [] };\r\n    \r\n    if (isPieChart(type)) {\r\n        let _DefaultLegend = {\r\n            show: true,\r\n            orient: 'horizontal',\r\n            top: '80%',\r\n            // bottom:'10%',\r\n            // left: 'middle',\r\n            itemWidth: 20,\r\n            itemHeight: 12,\r\n            icon:'pin'\r\n        };\r\n        legend = angular.extend(legend,_DefaultLegend);\r\n        if (data[0]) {\r\n            angular.forEach(data[0].datapoints, function(datapoint) {\r\n                legend.data.push(datapoint.x);\r\n            });\r\n        }\r\n        \r\n        //legend.orient = 'verticle';\r\n       // legend.left = \"auto\";\r\n        // legend. = 'right';\r\n        // legend.y = 'center';\r\n    } else if (type === 'map') {\r\n        legend = {};\r\n    } else {\r\n        angular.forEach(data, function(serie) {\r\n            legend.data.push(serie.name);\r\n        });\r\n        legend.orient = 'horizontal';\r\n    }\r\n\r\n    return angular.extend(legend, config.legend || {});\r\n}\r\n\r\nlet getTooltip = (data, config, type) => {\r\n    var tooltip = {};\r\n\r\n    switch (type) {\r\n        case 'line':\r\n        case 'area':\r\n            tooltip.trigger = 'axis';\r\n            break;\r\n        case 'pie':\r\n            tooltip.trigger = 'item';\r\n            tooltip.position=['50%', '50%'];\r\n            break;\r\n        case 'donut':\r\n        case 'bar':\r\n        case 'map':\r\n        case 'gauge':\r\n            tooltip.trigger = 'item';\r\n            break;\r\n    }\r\n\r\n    if (type === 'pie') {\r\n        tooltip.formatter = '{a} <br/>{b}: {c} ({d}%)';\r\n    }\r\n\r\n    if (type === 'map') {\r\n        tooltip.formatter = '{b}';\r\n    }\r\n\r\n    return angular.extend(tooltip, angular.isObject(config.tooltip) ? config.tooltip : {});\r\n}\r\n\r\nlet getTitle = (data, config, type) => {\r\n    if (angular.isObject(config.title)) {\r\n        return config.title;\r\n    }\r\n\r\n    return isPieChart(type) ? null : {\r\n        text: config.title,\r\n        subtext: config.subtitle || '',\r\n        x: 50,\r\n    };\r\n}\r\n\r\nlet formatKMBT = (y, formatter) => {\r\n    if (!formatter) {\r\n        formatter = function(v) {\r\n            return Math.round(v * 100) / 100;\r\n        };\r\n    }\r\n    y = Math.abs(y);\r\n    if (y >= 1000000000000) {\r\n        return formatter(y / 1000000000000) + 'T';\r\n    } else if (y >= 1000000000) {\r\n        return formatter(y / 1000000000) + 'B';\r\n    } else if (y >= 1000000) {\r\n        return formatter(y / 1000000) + 'M';\r\n    } else if (y >= 1000) {\r\n        return formatter(y / 1000) + 'K';\r\n    } else if (y < 1 && y > 0) {\r\n        return formatter(y);\r\n    } else if (y === 0) {\r\n        return '';\r\n    } else {\r\n        return formatter(y);\r\n    }\r\n}\r\n\r\nangularAMD.factory('echartsUtil', [() => {\r\n    return {\r\n        isPieChart: isPieChart,\r\n        isAxisChart: isAxisChart,\r\n        isHeatmapChart: isHeatmapChart,\r\n        getAxisTicks: getAxisTicks,\r\n        getSeries: getSeries,\r\n        getLegend: getLegend,\r\n        getTooltip: getTooltip,\r\n        getTitle: getTitle,\r\n        formatKMBT: formatKMBT,\r\n    };\r\n}])\r\n"],"sourceRoot":"/source/"}