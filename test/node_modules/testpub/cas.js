var https = require('https');
var http = require('http');
var url = require('url');
var querystring = require('querystring')
var getCasInfor = require('testpub/casParams').getCasInfor;
var sessionid;
var sid;
var i, j = 0;
var getid;

var getIdUrl = 'sttest.h3c.com';

var getAHref = function (htmlstr) {//获取登陆页面中的action的值(表单URL)
    var reg = /<form.+?action=('|")?([^'"]+)('|")?(?:\s+|>)/gim;
    var arr = [];
    while (tem = reg.exec(htmlstr)) {
        arr.push(tem[2]);
    }
    return arr;
}
//---------------------------云上认证----------------------------------------
function _lvzhou_getSession(res, callback) {
    console.log("get sessionid......");
    var options = {
        "host": url.parse(res.headers.location).host,
        "port": 443,
        "path": "/v3/base/userauth?ticket=device_cas",
        "method": "GET"
    };
    var req = https.request(options, function (res) {

        //console.log(url.parse(res.headers.location).pathname);
        res.setEncoding('utf8');
        res.on('data', function (data) {

            getid =  res.headers['set-cookie'][0].split(';')[0];
        });
        res.on('end', function () {
            callback(getid);
        });
        res.on('error', function (err) {
            console.log(err);
            return;
        });
    });
    req.end();
}
function _lvzhou_casAuth(serverOptions, callback) {
    console.log('Start to cas auth......');
    console.log("redirect https......");
    console.log(getCasInfor(serverOptions));

    var req = http.request(getCasInfor(serverOptions), function (res) {

        console.log('status:', res.statusCode);
        console.log('headers:', res.headers);
        //console.log(url.parse(res.headers.location).pathname);
        res.setEncoding('utf8');
        res.on('data', function () {
        }).on('end', function () {
            _lvzhou_getSession(res, callback);
        });
        res.on('error', function (err) {
            console.log(err);
            return;
        });
    });
    req.end();
}
//---------------------------设备认证----------------------------------------

function _dev_casAuth(callback) {

    console.log('Start  Dev CASauth ...');
    var options = {
        "host": 'sttest.h3c.com',
        "port": 443,
        "path": "/v3/base/userauth?ticket=device_cas",
        "method": "GET"
    };
    var req = https.request(options, function (res) {
        res.setEncoding('utf8');
        var recv = '';
        res.on('data', function (data) {
            recv += data;
        }).on('end', function () {
            if(JSON.parse(recv).sessionid != null && res.headers['set-cookie'][0].split(';')[0] != null)
            {
                getid = {
                    "sessionid": JSON.parse(recv).sessionid,
                    "sid": res.headers['set-cookie'][0].split(';')[0]
                };
                console.log(getid);
                callback(getid);
            }else{

                console.log('get sessiond failed ...');
            }
        });
        res.on('error', function (err) {
            console.log(err);
        });
    });
    req.end();
}
//----------------------浏览器认证-------------------------------
function getSessionId(res,callback){
    console.log('get sessionid...');
    var options = {
        "host": url.parse(res.headers.location).host,
        "port": 443,
        "path": url.parse(res.headers.location).path,
        "method": "GET"
    };
    console.log("options: ");
    console.log(options);
    var req = https.request(options, function (res) {
        res.setEncoding('utf8');
        var cookie = res.headers['set-cookie'];
        var recvData = '';
        res.on('data', function (data) {
            recvData += data;
        });
        res.on('end', function () {
        console.log("res.statusCode: ");
        console.log(res.statusCode);
                if (cookie[0] != undefined) {
                    if (cookie[0].split(';')[0] != undefined) {

                        callback(cookie[0].split(';')[0]);
                        //console.log(cookie[0].split(';')[0])

                    } else {
                        console.log('Cookie is undefined......');
                    }

                } else {

                    console.log('Cookie is undefined......');
                }
        });
        res.on('error', function (err) {
            console.log(err);
            return;
        });
    }).end();
}
function submitLoginForm(Res,ur1,callback) {
    console.log("post username&password......");

    var post_data = querystring.stringify({
        username: 'liuchao',
        password: '123456789',
        lt: url.parse(Res.headers.location).query.slice(8).split('&')[0],
        execution: url.parse(Res.headers.location).query.split('=')[2],
        _eventId: 'submit',
        _submit: 'LOGIN'
    });
    console.log(post_data);
    var options =
    {
        method: "POST",
        host: url.parse(ur1).host,
        port: 443,
        path: url.parse(ur1).path,
        'login-form-type': 'pwd',
        headers: {
            'Content-Length': post_data.length,
            'Content-Type': 'application/x-www-form-urlencoded',
            'Cookie': Res.headers['set-cookie'][0].split(';')[0],
        }
    };
    console.log(options);
    var req = https.request(options, function (res) {
        console.log('status:', res.statusCode);//响应状态码
        res.setEncoding('utf8');

        console.log(res.headers.location);
        var body = '';
        res.on('data', function (data) {
            body += data;
        });
        res.on('end', function () {

            getSessionId(res,callback);

        });
        res.on('error', function (err) {
            console.log(err);
            return;
        });
    });
    console.log(post_data);

    req.write(post_data);
    req.end();

}
function getLoginHtml(Res,callback){
    console.log('get login html...');
    var options = {
        "host": url.parse(Res.headers.location).host,
        "port": 443,
        "path": url.parse(Res.headers.location).path,
        "method": "GET"
    };
    var req = https.request(options, function (res) {
        res.setEncoding('utf8');
        var recvData = '';
        res.on('data', function (data) {
            recvData += data;
        });
        res.on('end', function () {

            submitLoginForm(Res,getAHref(recvData)[0],callback);
        });
        res.on('error', function (err) {
            console.log(err);
            return;
        });
    }).end();
}
function getLT(res,callback) {
    console.log('get LT...');
    var options = {
        "host": url.parse(res.headers.location).host,
        "port": 443,
        "path": url.parse(res.headers.location).path,
        "method": "GET",
        headers: {
            'Cookie': res.headers['set-cookie'][0].split(";")[0]
        }
    };
    console.log(options);
    var req = https.request(options, function (res) {
        res.setEncoding('utf8');
        console.log(res.headers.location);
        var recvData = '';
        res.on('data', function (data) {
            recvData += data;
        });
        res.on('end', function () {
            getLoginHtml(res,callback);
        });
        res.on('error', function (err) {
            console.log(err);
            return;
        });
    }).end();
}
function redirecToCas(callback) {
    console.log('redirect to CAS ...');
    var req = https.get('https://sttest.h3c.com/', function (res) {
        res.setEncoding('utf8');
        console.log(res.headers.location);
        var recvData = '';
        res.on('data', function (data) {
            recvData += data;
        });
        res.on('end', function () {
            // console.log(recvData);
            getLT(res,callback);
        });
        res.on('error', function (err) {
            console.log(err);
            return;
        });
    }).end();
}
//-------------------------app认证-----------------------------
function _app_getSessionId(data, callback) {

    console.log("get sessionid......");
    var options = {
        host: "lvzhouv3.h3c.com",
        pathname: "/v3/app/login",
        path: "/v3/app/login" + "?ticket=" + data,
        method: 'get'
    };
    console.log(options);
    var req = https.get(options, function (res) {
        console.log('status:', res.statusCode);//响应状态码

        if (res.statusCode != 200) {
            console.log('CAS authentication failed');
            return;
        }
        res.setEncoding('utf8');
        var jsonData = '';
        res.on('data', function (sessionid) {   //获取响应主体
            jsonData += sessionid;
        });
        res.on('end', function () {
            // var sessionid = sessionid.sessionid;
            var sid = res.headers['set-cookie'][0];
            console.log(jsonData);
            getid = {
                "sessionid": getid[0] = JSON.parse(jsonData).sessionid,
                "sid": getid[1] = res.headers['set-cookie'][0]
            }
            callback(getid);
        });
        res.on('error', function (err) {
            console.log(err);
        });
    });
    req.on('error', function (err) {
        console.log(err);
    });
    req.end();
}
function _app_getST(serverOptions, ur1, callback) {
    console.log("get ST......");
    var option = {
        host: url.parse(ur1).host,
        port: 80,
        path: url.parse(ur1).path,
        method: 'post'
    };
    var req = http.request(option, function (res) {
        console.log('status:', res.statusCode);   //响应状态码200
        //console.log('headers:', res.headers);     //响应头
        res.setEncoding('utf8');
        var tmpData;
        res.on('data', function (data) {   //获取响应主体
            tmpData = data;
        });
        res.on('end', function () {
            _app_getSessionId(tmpData, callback);
        });
        res.on('error', function (err) {
            console.log(err);
        });
    });

    var sndmsg = "service=https://" + getCasInfor(serverOptions).host + getCasInfor(serverOptions).path;
    req.write(sndmsg);
    req.end();
}
function _app_getTGT(serverOptions, redData, callback) {
    console.log("get TGT......");
    var option = {
        host: url.parse(redData.cas_url).host,
        port: 80,
        path: url.parse(redData.cas_url).path,
        method: 'post'
    };
    console.log(redData.cas_url);
    console.log(option);
    var req = http.request(option, function (res) {
        console.log('status:', res.statusCode);   //响应状态码
        //console.log('headers:', res.headers);     //响应头
        res.setEncoding('utf8');
        var body;
        res.on('data', function (data) {   //获取响应主体
            body = data;
            // console.log('body:', data);
        });
        res.on('end', function () {
            console.log(body);
            console.log(getAHref(body));
            var ur1 = getAHref(body)[0];
            _app_getST(serverOptions, ur1, callback);
        });
        res.on('error', function (err) {
            console.log(err);
        });
    });
    var sndmsg = 'username=super&password=lvzhou1-super';
    req.write(sndmsg);
    req.end();
}
function _app_redirectUrl(serverOptions, res, callback) {
    console.log("redirect https......");
    var options = {
        "host": url.parse(res.headers.location).host,
        "port": 443,
        path: "/v3/app/login",
        "method": "GET"
    };
    console.log(options);

    var req = https.request(options, function (res) {

        console.log('status:', res.statusCode);

        res.setEncoding('utf8');

        var redData;
        res.on('data', function (data) {
            redData = JSON.parse(data);
            console.log("--------------");
            console.log(redData);
        });
        res.on('end', function () {
            _app_getTGT(serverOptions, redData, callback);
        });
        res.on('error', function (err) {
            console.log(err);
        });
    });

    req.end();
}
function _app_casAuth(serverOptions, callback) {
    console.log('Start to cas auth.............');
    console.log(getCasInfor(serverOptions));

    var req = http.request(getCasInfor(serverOptions), function (res) {

        console.log('status:', res.statusCode);
        console.log('headers:', res.headers);

        //console.log(url.parse(res.headers.location).pathname);
        res.setEncoding('utf8');
        res.on('data', function () {
        }).on('end', function () {
            _app_redirectUrl(serverOptions, res, callback);
        });
        res.on('error', function (err) {
            console.log(err);
        });
    });
    req.end();
}
//-------------------------------------------------------------
exports.generateID = function (casCategory, serverOptions, callback) {
    console.log(serverOptions);
    if (casCategory == 'dev') {
        _dev_casAuth(callback);

    } else if (casCategory == 'app') {
        {
            _app_casAuth(serverOptions, callback);
        }
    } else if (casCategory == 'explore') {
        redirecToCas(callback);
    } else if (casCategory == 'lvzhouCas') {
        _lvzhou_casAuth(serverOptions, callback);
    } else {
        console.log("Please input any of ['dev' 'app' 'explore' 'lvzhouCas']");
    }
}
