{"version":3,"sources":["frame/component/form/oasis-input.js"],"names":["patternRegex","errMsg","validTypes","validValue","checkField","value","type","param","_val","undefined","String","trim","length","RegExp","test","indexOf","Number","arr","split","factory","scope","osLabel","osModel","osDisabled","osType","osValidChange","osValidResult","restrict","replace","template","controller","$scope","id","Math","random","toString","substr","link","ele","attr","console","log","errMsgObj","validable","Object","keys","filter","item","lenrange","Error","range","min","isNaN","minlen","max","maxlen","holder","placeholder","autoshowerr","showErrMsg","errmsg","labelStyle","width","labelwidth","inputStyle","inputwidth","$watch","msg","valid","old","result","needValid","concat","splice","unshift","index","key","window","oasisInputConst","directive"],"mappings":";;;;;;;;;;;;;AAKA,MAAIA,eAAe,qBAAOA,YAA1B;AAHA;;AAIA,MAAIC,SAAS,qBAAOA,MAApB;;AAEA;AACA,MAAIC,aAAa,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,OAAzB,EAAkC,QAAlC,EAA4C,IAA5C,EAAkD,KAAlD,CAAjB;AACA,MAAIC,aAAa,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,QAA/C,EAAyD,QAAzD,EAAmE,UAAnE,CAAjB;;AAEA;;;;;;AAMA,MAAIC,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAwB;AACvC,QAAIC,IAAJ;AACA,QAAIH,UAAUI,SAAd,EAAyB;AACvBJ,cAAQ,EAAR;AACD;AACD,QAAIC,SAAS,UAAb,EAAyB;AACvB,aAAOI,OAAOL,KAAP,EAAcM,IAAd,GAAqBC,MAArB,GAA8B,CAArC;AACD;AACD,QAAIN,SAAS,SAAb,EAAwB;AACtB,aAAO,IAAIO,MAAJ,CAAWN,KAAX,EAAkBO,IAAlB,CAAuBT,KAAvB,CAAP;AACD;AACD;AACA,QAAIH,WAAWa,OAAX,CAAmBT,IAAnB,MAA6B,CAAC,CAAlC,EAAqC;AACnC,aAAON,aAAaM,IAAb,EAAmBQ,IAAnB,CAAwBT,KAAxB,CAAP;AACD;AACD,QAAIC,SAAS,OAAb,EAAsB;AACpBE,aAAOQ,OAAOX,KAAP,CAAP;AACA,UAAIY,MAAMV,MAAMW,KAAN,CAAY,GAAZ,CAAV;AACA,aAAOV,QAAQQ,OAAOC,IAAI,CAAJ,CAAP,CAAR,IAA0BT,QAAQQ,OAAOC,IAAI,CAAJ,CAAP,CAAzC;AACD;AACD,QAAIX,SAAS,KAAb,EAAoB;AAClB,aAAOU,OAAOX,KAAP,KAAiBE,KAAxB;AACD;AACD,QAAID,SAAS,KAAb,EAAoB;AAClB,aAAOU,OAAOX,KAAP,KAAiBE,KAAxB;AACD;AACD,QAAID,SAAS,UAAb,EAAyB;AACvBE,aAAOE,OAAOL,KAAP,EAAcM,IAAd,GAAqBC,MAA5B;AACA,UAAIK,OAAMV,MAAMW,KAAN,CAAY,GAAZ,CAAV;AACA,aAAOV,QAAQQ,OAAOC,KAAI,CAAJ,CAAP,CAAR,IAA0BT,QAAQQ,OAAOC,KAAI,CAAJ,CAAP,CAAzC;AACD;AACD,QAAIX,SAAS,QAAb,EAAuB;AACrB,aAAOI,OAAOL,KAAP,EAAcM,IAAd,GAAqBC,MAArB,IAA+BL,KAAtC;AACD;AACD,QAAID,SAAS,QAAb,EAAuB;AACrB,aAAOI,OAAOL,KAAP,EAAcM,IAAd,GAAqBC,MAArB,IAA+BL,KAAtC;AACD;AACD;AACA,WAAO,IAAP;AACD,GAvCD;;AAyCA;;;;;;AAMA,MAAIY,UAAU,SAAVA,OAAU,GAAM;AAClB,WAAO;AACLC,aAAO;AACLC,iBAAS,GADJ;AAELC,iBAAS,GAFJ;AAGLC,oBAAY,GAHP;AAILC,gBAAQ,GAJH;AAKLC,uBAAe,GALV;AAMLC,uBAAe;AANV,OADF;AASLC,gBAAU,GATL;AAULC,eAAS,IAVJ;AAWLC,gBAAU;;;;eAXL;AAgBLC,gBAhBK,sBAgBMC,MAhBN,EAgBa;AAChBA,eAAOP,MAAP,GAAgBO,OAAOP,MAAP,IAAiB,MAAjC;AACAO,eAAOC,EAAP,GAAYC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,IAAuC,GAAvC,GAA6CL,OAAOP,MAAhE;AACD,OAnBI;AAoBLa,UApBK,gBAoBAjB,KApBA,EAoBOkB,GApBP,EAoBYC,IApBZ,EAoBiB;AACpBC,gBAAQC,GAAR,CAAY,SAAZ;AACA,YAAIC,YAAY,EAAhB;AACA,YAAIC,YAAY,CAAC,CAACJ,KAAK,SAAL,CAAlB;AACA;AACAK,eAAOC,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,CAAyB,UAACC,IAAD,EAAU;AACjC,cAAI,QAAQjC,IAAR,CAAaiC,IAAb,CAAJ,EAAwB;AACtBL,sBAAUK,KAAKnB,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAV,IAAsCW,KAAKQ,IAAL,CAAtC;AACD;AACF,SAJD;;AAMA;AACA,YAAIR,KAAKS,QAAL,IAAiBT,KAAKS,QAAL,CAAc9B,KAAd,CAAoB,GAApB,EAAyBN,MAAzB,KAAoC,CAAzD,EAA4D;AAC1D,gBAAM,IAAIqC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACD,YAAIV,KAAKW,KAAL,IAAcX,KAAKW,KAAL,CAAWhC,KAAX,CAAiB,GAAjB,EAAsBN,MAAtB,KAAiC,CAAnD,EAAsD;AACpD,gBAAM,IAAIqC,KAAJ,CAAU,uBAAV,CAAN;AACD;AACD,YAAIV,KAAKY,GAAL,IAAYC,MAAMpC,OAAOuB,KAAKY,GAAZ,CAAN,CAAhB,EAAyC;AACvC,gBAAM,IAAIF,KAAJ,CAAU,WAAV,CAAN;AACD;AACD,YAAIV,KAAKc,MAAL,IAAeD,MAAMpC,OAAOuB,KAAKc,MAAZ,CAAN,CAAnB,EAA+C;AAC7C,gBAAM,IAAIJ,KAAJ,CAAU,cAAV,CAAN;AACD;AACD,YAAIV,KAAKe,GAAL,IAAYF,MAAMpC,OAAOuB,KAAKe,GAAZ,CAAN,CAAhB,EAAyC;AACvC,gBAAM,IAAIL,KAAJ,CAAU,WAAV,CAAN;AACD;AACD,YAAIV,KAAKgB,MAAL,IAAeH,MAAMpC,OAAOuB,KAAKgB,MAAZ,CAAN,CAAnB,EAA+C;AAC7C,gBAAM,IAAIN,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED;AACA7B,cAAMoC,MAAN,GAAejB,KAAKkB,WAAL,IAAoB,EAAnC;AACArC,cAAMsC,WAAN,GAAoBnB,KAAKmB,WAAL,KAAqBjD,SAArB,GAAiC,IAAjC,GAAwC8B,KAAKmB,WAAjE;;AAEAtC,cAAMuC,UAAN,GAAmB,KAAnB,CAnCoB,CAmCM;AAC1BvC,cAAMwC,MAAN,GAAe,EAAf,CApCoB,CAoCD;AACnB;;AAEAxC,cAAMyC,UAAN,GAAmB;AACjBC,iBAAOvB,KAAKwB,UAAL,GAAkBxB,KAAKwB,UAAL,GAAkB,IAApC,GAA2C;AADjC,SAAnB;;AAIA3C,cAAM4C,UAAN,GAAmB;AACjBF,iBAAOvB,KAAK0B,UAAL,GAAkB1B,KAAK0B,UAAL,GAAkB,IAApC,GAA2C;AADjC,SAAnB;AAGA;AACA,YAAI1B,KAAKb,aAAT,EAAwB;AACtBN,gBAAM8C,MAAN,CAAa,QAAb,EAAuB,UAAUC,GAAV,EAAe;AACpC/C,kBAAMM,aAAN,GAAsB,EAAC0C,OAAO,CAACD,GAAT,EAAcA,KAAKA,GAAnB,EAAtB;AACD,WAFD;AAGD;;AAED,YAAIxB,SAAJ,EAAe;AACb,cAAI,CAACJ,KAAKjB,OAAV,EAAmB;AACjB,kBAAM,IAAI2B,KAAJ,CAAU,2BAAV,CAAN;AACD;AACD;AACA7B,gBAAM8C,MAAN,CAAa,SAAb,EAAwB,UAAU7D,KAAV,EAAiBgE,GAAjB,EAAsB;AAC5C,gBAAIC,eAAJ;AAAA,gBAAYC,YAAY,EAAxB;;AAEA,gBAAKlE,UAAUI,SAAV,IAAuB4D,QAAQ5D,SAAhC,IACDJ,UAAU,EAAV,IAAgBgE,QAAQ,EAD3B,EACgC;AAC9BjD,oBAAMuC,UAAN,GAAmB,KAAnB;AACD,aAHD,MAGO;AACLvC,oBAAMuC,UAAN,GAAmB,IAAnB;AACD;AACDtD,oBAAQA,UAAUI,SAAV,GAAsB,EAAtB,GAA2BJ,KAAnC;AACA;;AAEAkE,wBAAYA,UAAUC,MAAV,CAAiBrE,UAAjB,CAAZ;AACA;AACA,gBAAID,WAAWa,OAAX,CAAmBK,MAAMI,MAAzB,MAAqC,CAAC,CAA1C,EAA6C;AAC3C;AACA+C,wBAAUE,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBrD,MAAMI,MAA7B;AACD;AACD;;;AAGA,gBAAIe,KAAK,SAAL,MAAoB9B,SAAxB,EAAmC;AACjC8D,0BAAY,CAAC,SAAD,CAAZ;AACA;AACA,kBAAIhC,KAAK,UAAL,CAAJ,EAAsB;AACpBgC,0BAAUG,OAAV,CAAkB,UAAlB;AACD;AACF;;AAED;AACA,gBAAInC,KAAK,UAAL,MAAqB9B,SAAzB,EAAoC;AAClC,kBAAIC,OAAOL,KAAP,EAAcM,IAAd,GAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACrC;AACAQ,sBAAMwC,MAAN,GAAe,EAAf;AACA;AACD;AACF;AACD;AACA,iBAAK,IAAIe,KAAT,IAAkBJ,SAAlB,EAA6B;AAC3B;AACA,kBAAIK,MAAML,UAAUI,KAAV,CAAV;AACA;AACA,kBAAIC,QAAQxD,MAAMI,MAAd,IAAwBe,KAAKqC,GAAL,MAAcnE,SAA1C,EAAqD;AACnD6D,yBAASlE,WAAWC,KAAX,EAAkBuE,GAAlB,EAAuBrC,KAAKqC,GAAL,CAAvB,CAAT;AACA;AACA,oBAAI,CAACN,MAAL,EAAa;AACX;AACA;AACA;AACA,sBAAI,CAAC,UAAD,EAAa,SAAb,EAAwBE,MAAxB,CAA+BtE,UAA/B,EAA2Ca,OAA3C,CAAmD6D,GAAnD,MAA4D,CAAC,CAAjE,EAAoE;AAClExD,0BAAMwC,MAAN,GAAelB,UAAUkC,GAAV,KAAkB3E,OAAO2E,GAAP,CAAjC;AACD,mBAFD,MAEO,IAAI,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,QAAzB,EAAmC7D,OAAnC,CAA2C6D,GAA3C,MAAoD,CAAC,CAAzD,EAA4D;AACjE;AACAxD,0BAAMwC,MAAN,GAAe,CAAClB,UAAUkC,GAAV,KAAkB3E,OAAO2E,GAAP,CAAnB,EACdhD,OADc,CACN,UADM,EACMW,KAAKqC,GAAL,CADN,CAAf;AAED,mBAJM,MAIA,IAAI,CAAC,OAAD,EAAU,UAAV,EAAsB7D,OAAtB,CAA8B6D,GAA9B,MAAuC,CAAC,CAA5C,EAA+C;AACpD,wBAAI3D,MAAMsB,KAAKqC,GAAL,EAAU1D,KAAV,CAAgB,GAAhB,CAAV;AACA;AACAE,0BAAMwC,MAAN,GAAe,CAAClB,UAAUkC,GAAV,KAAkB3E,OAAO2E,GAAP,CAAnB,EACdhD,OADc,CACN,UADM,EACMX,IAAI,CAAJ,CADN,EAEdW,OAFc,CAEN,QAFM,EAEIX,IAAI,CAAJ,CAFJ,CAAf;AAGD;AACD;AACD;AACF;AACF;AACD,gBAAIqD,MAAJ,EAAY;AACVlD,oBAAMwC,MAAN,GAAe,EAAf;AACD;AACF,WArED;AAsED;AACF;AArJI,KAAP;AAwJD,GAzJD;;AA2JA;AACAiB,SAAOC,eAAP,GAAyB;AACvB9E,8BADuB;AAEvBC,kBAFuB;AAGvBC,0BAHuB;AAIvBC;AAJuB,GAAzB;;AAOA,uBAAI4E,SAAJ,CAAc,YAAd,EAA4B,CAAC5D,OAAD,CAA5B","file":"frame/component/form/oasis-input.js","sourcesContent":["import app from 'angularAMD'\nimport common from './form-common'\n// 导入样式\nimport 'css!frame/component/form/less/input'\n\nlet patternRegex = common.patternRegex;\nlet errMsg = common.errMsg;\n\n// [2,200]\nlet validTypes = ['date', 'email', 'tel', 'phone', 'number', 'ip', 'mac'];\nlet validValue = ['required', 'pattern', 'range', 'min', 'max', 'minlen', 'maxlen', 'lenrange'];\n\n/**\n * 检查字段\n * @param {*} value  数据\n * @param {String} type 类型\n * @param {*} param 校验的参数\n */\nlet checkField = (value, type, param) => {\n  var _val;\n  if (value === undefined) {\n    value = '';\n  }\n  if (type === 'required') {\n    return String(value).trim().length > 0;\n  }\n  if (type === 'pattern') {\n    return new RegExp(param).test(value);\n  }\n  //  基础类型校验\n  if (validTypes.indexOf(type) !== -1) {\n    return patternRegex[type].test(value);\n  }\n  if (type === 'range') {\n    _val = Number(value);\n    let arr = param.split(',');\n    return _val >= Number(arr[0]) && _val <= Number(arr[1]);\n  }\n  if (type === 'min') {\n    return Number(value) >= param;\n  }\n  if (type === 'max') {\n    return Number(value) <= param;\n  }\n  if (type === 'lenrange') {\n    _val = String(value).trim().length;\n    let arr = param.split(',');\n    return _val >= Number(arr[0]) && _val <= Number(arr[1]);\n  }\n  if (type === 'minlen') {\n    return String(value).trim().length >= param;\n  }\n  if (type === 'maxlen') {\n    return String(value).trim().length <= param;\n  }\n  // 其他校验\n  return true;\n}\n\n/**\n * @description 需要支持的功能\n * 1、类型切换，支持text,number,email,tel,file,password,image，也会做相应的校验\n * 2、label配置，自动生成id\n * 3、常见的表单验证，错误消息配置,pattrn的优先级最高,每次只显示一个错误信息\n */\nlet factory = () => {\n  return {\n    scope: {\n      osLabel: '@',\n      osModel: '=',\n      osDisabled: '=',\n      osType: '@',\n      osValidChange: '&',\n      osValidResult: '='\n    },\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"oasis-input\" ng-class=\"{disabled:osDisabled}\">\\\n        <label ng-bind=\"osLabel\" for=\"{{id}}\" ng-style=\"labelStyle\"></label>\\\n        <input ng-model=\"osModel\" type=\"text\" placeholder=\"{{holder}}\" class=\"form-control\" id=\"{{id}}\" ng-style=\"inputStyle\" ng-disabled=\"osDisabled\">\\\n        <span ng-bind=\"errmsg\" ng-show=\"autoshowerr && errmsg && showErrMsg\" class=\"errmsg\"></span>\\\n        </div>',\n    controller($scope){\n      $scope.osType = $scope.osType || 'text';\n      $scope.id = Math.random().toString(16).substr(2) + '_' + $scope.osType;\n    },\n    link(scope, ele, attr){\n      console.log('link...');\n      let errMsgObj = {};\n      let validable = !!attr['osValid'];\n      // 获取错误信息key,例如required-msg=\"这个是必填项\"  =>{required:\"这个是必填项\"}\n      Object.keys(attr).filter((item) => {\n        if (/\\Msg$/.test(item)) {\n          errMsgObj[item.replace(/\\Msg/, '')] = attr[item];\n        }\n      });\n\n      //  判断attr的range和lenrange是否是数组，判断min,max,minlen,maxlen是否为数字\n      if (attr.lenrange && attr.lenrange.split(',').length !== 2) {\n        throw new Error('lenrange必须有两个值，中间使用\",\"分割');\n      }\n      if (attr.range && attr.range.split(',').length !== 2) {\n        throw new Error('range必须有两个值，中间使用\",\"分割');\n      }\n      if (attr.min && isNaN(Number(attr.min))) {\n        throw new Error('min不是一个数字');\n      }\n      if (attr.minlen && isNaN(Number(attr.minlen))) {\n        throw new Error('minlen不是一个数字');\n      }\n      if (attr.max && isNaN(Number(attr.max))) {\n        throw new Error('max不是一个数字');\n      }\n      if (attr.maxlen && isNaN(Number(attr.maxlen))) {\n        throw new Error('maxlen不是一个数字');\n      }\n\n      // 存储input引用\n      scope.holder = attr.placeholder || '';\n      scope.autoshowerr = attr.autoshowerr === undefined ? true : attr.autoshowerr;\n\n      scope.showErrMsg = false; //  默认不显示错误信息，防止页面刚进去就显示错误信息\n      scope.errmsg = ''; //  存储所有的错误信息\n      // 创建一个id，点击label的时候能激活表单\n\n      scope.labelStyle = {\n        width: attr.labelwidth ? attr.labelwidth + 'px' : '80px'\n      };\n\n      scope.inputStyle = {\n        width: attr.inputwidth ? attr.inputwidth + 'px' : '200px'\n      };\n      //  校验结果\n      if (attr.osValidResult) {\n        scope.$watch('errmsg', function (msg) {\n          scope.osValidResult = {valid: !msg, msg: msg};\n        });\n      }\n\n      if (validable) {\n        if (!attr.osModel) {\n          throw new Error('如果你配置了表单验证，你必须要配置os-model');\n        }\n        // 处理表单校验\n        scope.$watch('osModel', function (value, old) {\n          let result, needValid = [];\n\n          if ((value === undefined && old === undefined) ||\n            (value === '' && old === '')) {\n            scope.showErrMsg = false;\n          } else {\n            scope.showErrMsg = true;\n          }\n          value = value === undefined ? '' : value;\n          // 是否校验通过的\n\n          needValid = needValid.concat(validValue);\n          // 检查type\n          if (validTypes.indexOf(scope.osType) !== -1) {\n            // 将type放在正则表达式和require的后面\n            needValid.splice(2, 0, scope.osType);\n          }\n          /**\n           * 如果添加了正则正则表达式的校验，则忽略其他的校验方式，除了必填的\n           */\n          if (attr['pattern'] !== undefined) {\n            needValid = ['pattern'];\n            //  先校验必填项\n            if (attr['required']) {\n              needValid.unshift('required');\n            }\n          }\n\n          //  不是必填项，如果没有输入的时候，就不要校验了\n          if (attr['required'] === undefined) {\n            if (String(value).trim().length === 0) {\n              // 直接校验成功\n              scope.errmsg = '';\n              return;\n            }\n          }\n          // 轮训所有需要检查的数据\n          for (let index in needValid) {\n            // 获取校验规则的字段  例如required\n            let key = needValid[index];\n            // 校验属性和type\n            if (key === scope.osType || attr[key] !== undefined) {\n              result = checkField(value, key, attr[key]);\n              // 校验失败了就显示结果\n              if (!result) {\n                // 显示错误消息，并且不往下执行了\n                // scope.errmsg = errMsgObj[scope.osType] || errMsg[scope.osType];\n                // 所有无参数的提示信息\n                if (['required', 'pattern'].concat(validTypes).indexOf(key) !== -1) {\n                  scope.errmsg = errMsgObj[key] || errMsg[key];\n                } else if (['min', 'max', 'minlen', 'maxlen'].indexOf(key) !== -1) {\n                  // 需要替换value的\n                  scope.errmsg = (errMsgObj[key] || errMsg[key])\n                  .replace(/\\$value/g, attr[key]);\n                } else if (['range', 'lenrange'].indexOf(key) !== -1) {\n                  let arr = attr[key].split(',');\n                  // 需要替换$start和$end的\n                  scope.errmsg = (errMsgObj[key] || errMsg[key])\n                  .replace(/\\$start/g, arr[0])\n                  .replace(/\\$end/g, arr[1]);\n                }\n                break;\n              }\n            }\n          }\n          if (result) {\n            scope.errmsg = '';\n          }\n        });\n      }\n    }\n  }\n    ;\n};\n\n// 将常量挂在window上\nwindow.oasisInputConst = {\n  patternRegex,\n  errMsg,\n  validTypes,\n  validValue\n};\n\napp.directive('oasisInput', [factory]);"],"sourceRoot":"/source/"}